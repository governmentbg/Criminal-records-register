@model ApplicationViewModel
@using Infragistics.Web.Mvc
@using MJ_CAIS.WebPortal.External.Models.Application
@using MJ_CAIS.Common.Resources
@using MJ_CAIS.WebPortal.External.Controllers
@using MJ_CAIS.WebPortal.External.Utils;
@using MJ_CAIS.DTO.Application.Public

@{
    ViewData["Title"] = ApplicationResources.titleApplications;
    var pkName = nameof(PublicApplicationGridDTO.Id);
    var buttonPreviewTemplate = ButtonTemplates.PreviewButton(Url.Action(nameof(ApplicationController.Preview), "Application") + $"/${{{pkName}}}");
    var messageCreateSuccessfullApp = ApplicationResources.messageCreateSuccessfull;
}

<div class="col-md-12">
    <div class="card">
        <div class="h5 card-header bg-primary text-white d-flex justify-content-between align-items-center">
            @ViewData["Title"]
            <a class="btn btn-sm btn-light" asp-controller="Application" asp-action="New">
                Ново заявление
            </a>
        </div>
        <div class="card-body">
            <partial name="_InfragisticsLoader" />
            <div class="page-content scrollable-page">
                <div class="box-content">
                    @(Html.Infragistics()
                    .Grid(Model.Applications)
                    .ID("applications")
                    .Language(ViewData["Culture"].ToString())
                    .Width("100%")
                    .PrimaryKey("Id")
                    .AutoGenerateColumns(false)
                    .AutoGenerateLayouts(false)
                    .Columns(column =>
                    {
                    column.For(x => x.Id).HeaderText("Id").Hidden(true).Width("20%");
                    column.For(x => x.Egn).HeaderText(ApplicationResources.lblEgn).Width("20%");
                    column.For(x => x.Name).HeaderText(ApplicationResources.lblName).Width("20%");
                    column.For(x => x.RegistrationNumber).HeaderText(ApplicationResources.lblRegistrationNumber).Width("25%");
                    column.For(x => x.CreatedOn).HeaderText(ApplicationResources.lblCreatedOn).Width("15%");
                    column.For(x => x.StatusName).HeaderText(ApplicationResources.lblStatus).Width("15%");
                    column.For(x => x.PurposeName).HeaderText(ApplicationResources.lblPurposeId).Width("25%");
                    column.For(x => x.Purpose).HeaderText(ApplicationResources.lblPurpose).Width("25%");
                        @*column.For(x => x.Email).HeaderText(ApplicationResources.lblEmail).Width("25%");*@
                    column.Unbound("buttons").HeaderText("").Template(buttonPreviewTemplate).Width("8%");
                    })
                    .Features(feature =>
                    {
                    feature
                    .Sorting()
                    .Type(OpType.Remote);
                    feature
                    .Paging()
                    .Type(OpType.Remote)
                    .PageSize(10)
                    .PageSizeDropDownLocation("inpager");
                    feature
                    .Filtering()
                    .Mode(FilterMode.Simple)
                    .Type(OpType.Remote);
                    feature.Tooltips().Visibility(TooltipsVisibility.Overflow).Style(TooltipsStyle.Popover);
                    })
                    .DataSourceUrl(Url.Action(nameof(ApplicationController.GetUserApplications), "Application"))
                    .Render())
                </div>
            </div>
        </div>
    </div>
</div>
