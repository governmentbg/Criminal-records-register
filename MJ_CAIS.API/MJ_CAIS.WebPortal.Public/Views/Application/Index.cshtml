@model ApplicationViewModel
@using Infragistics.Web.Mvc
@using MJ_CAIS.WebPortal.Public.Models.Application
@using MJ_CAIS.Common.Resources
@using MJ_CAIS.WebPortal.Public.Controllers
@using MJ_CAIS.WebPortal.Public.Utils;
@using MJ_CAIS.DTO.Application.Public

@{
    ViewData["Title"] = ApplicationResources.titleApplications;
    var pkName = nameof(PublicApplicationGridDTO.Id);
    var buttonPreviewTemplate = ButtonTemplates.PreviewButton(Url.Action(nameof(ApplicationController.Preview), "Application") + $"/${{{pkName}}}");
}

<partial name="_InfragisticsLoader" />

<div class="d-flex" style="justify-content: space-between">
    <div class="d-flex align-items-center">
        <h3 class="pull-left">@ViewData["Title"]</h3>
    </div>
    <div class="d-flex">
        <div>
            <a class="btn btn-primary" asp-controller="Application" asp-action="New">
                @ApplicationResources.btnNewApp
            </a>
        </div>
    </div>
</div>

<hr />

<div class="page-content scrollable-page">
    <div class="box-content">
        @(Html.Infragistics()
        .Grid(Model.Applications)
        .ID("applications")
        .Language(ViewData["Culture"].ToString())
        .Width("100%")
        .PrimaryKey("Id")
        .AutoGenerateColumns(false)
        .AutoGenerateLayouts(false)
        .Columns(column =>
        {
        column.For(x => x.Id).HeaderText("Id").Hidden(true).Width("20%");
        column.For(x => x.RegistrationNumber).HeaderText(ApplicationResources.lblRegistrationNumber).Width("20%");
        column.For(x => x.CreatedOn).HeaderText(ApplicationResources.lblCreatedOn).Width("15%");
        column.For(x => x.StatusName).HeaderText(ApplicationResources.lblStatus).Width("20%");
        column.For(x => x.PurposeTypeName).HeaderText(ApplicationResources.lblPurposeId).Width("25%");
        column.For(x => x.Purpose).HeaderText(ApplicationResources.lblPurpose).Width("25%");
        column.For(x => x.Email).HeaderText(ApplicationResources.lblEmail).Width("25%");
        column.Unbound("buttons").HeaderText("").Template(buttonPreviewTemplate).Width("8%");
        })
        .Features(feature =>
        {
        feature
        .Sorting()
        .Type(OpType.Remote);
        feature
        .Paging()
        .Type(OpType.Remote)
        .PageSize(20)
        .PageSizeDropDownLocation("inpager");
        //.PagingHandler(OpType.Remote, pageSizeDropDownLocation: PageSizeDropDownLocation.inpager);
        feature
        .Filtering()
        .Mode(FilterMode.Simple)
        .Type(OpType.Remote);
        //.SetFilterToLower();
        })
        .DataSourceUrl(Url.Action(nameof(ApplicationController.GetUserApplications), "Application"))
        .Render())
    </div>
</div>
