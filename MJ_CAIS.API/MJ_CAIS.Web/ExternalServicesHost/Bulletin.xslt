<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:n1="http://cais.mjs.bg/BulletinModel-v1.0" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:Bulletin">
						<h3 align="center">
							<xsl:for-each select="n1:Type">
								<xsl:choose>
									<xsl:when test=". =&apos;ConvictionBulletin&apos;">
										<span>
											<xsl:text>БЮЛЕТИН ЗА СЪДИМОСТ</xsl:text>
										</span>
									</xsl:when>
									<xsl:when test=".=&apos;Bulletin78A&apos;">
										<span>
											<xsl:text>БЮЛЕТИН за наложено административно наказание по чл. 78а НК </xsl:text>
										</span>
										<br/>
									</xsl:when>
									<xsl:otherwise>
										<span>
											<xsl:text>БЮЛЕТИН - неопределен</xsl:text>
										</span>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</h3>
						<xsl:for-each select="n1:IssuerData">
							<div>
								<xsl:for-each select="n1:BulletinCreatorAuthority">
									<xsl:for-each select="n1:DecidingAuthorityName">
										<span>
											<xsl:text>Издаден от </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="n1:BulletinCreateDate">
									<span>
										<xsl:text> на </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
									</span>
									<span>
										<xsl:text> г.</xsl:text>
									</span>
								</xsl:for-each>
							</div>
						</xsl:for-each>
						<xsl:for-each select="n1:RegistrationData">
							<div>
								<xsl:for-each select="n1:ConvictionStatusAuthority">
									<xsl:for-each select="n1:Name">
										<span>
											<xsl:text>БС, в което се съхранява: </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="n1:RegistrationNumber">
									<span>
										<xsl:text>, с рег. № </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:BulletinReceivedDate">
									<span>
										<xsl:text>, дата на получаване </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:BulletinAlphabeticalIndex">
									<span>
										<xsl:text>, азбучен указател: </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
							</div>
						</xsl:for-each>
						<xsl:for-each select="n1:Person">
							<h3>
								<span>
									<xsl:text>Данни за осъденото лице</xsl:text>
								</span>
							</h3>
							<xsl:for-each select="n1:NamesBg">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>ИМЕНА НА КИРИЛИЦА:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test="string-length(n1:FullName )=0">
														<xsl:for-each select="n1:FirstName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:SurName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:FamilyName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="n1:FullName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:NamesEn">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>ИМЕНА НА ЛАТИНИЦА:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test="string-length(n1:FullName )=0">
														<xsl:for-each select="n1:FirstName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:SurName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:FamilyName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="n1:FullName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:PreviousNames"/>
							<xsl:for-each select="n1:PreviousNames">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<xsl:for-each select="n1:NameType">
													<xsl:choose>
														<xsl:when test=". =&apos;previous&apos;">
															<span>
																<xsl:text>ПРЕДИШНИ ИМЕНА</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;maiden&apos;">
															<span>
																<xsl:text>МОМИНСКО ИМЕ</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;nickname&apos;">
															<span>
																<xsl:text>ПСЕВДОНИМ</xsl:text>
															</span>
														</xsl:when>
														<xsl:otherwise>
															<xsl:apply-templates/>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test="string-length(n1:FullName )=0">
														<xsl:for-each select="n1:Names">
															<xsl:for-each select="n1:FirstName">
																<span style="font-weight:bold; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:SurName">
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:FamilyName">
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="n1:Names">
															<xsl:for-each select="n1:FullName">
																<span style="font-weight:bold; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
												<xsl:for-each select="n1:BirthDate">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:choose>
														<xsl:when test="n1:DatePrecision =&apos;Y&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="n1:DatePrecision =&apos;YM&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																</span>
																<span>
																	<xsl:text> месец </xsl:text>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> г.</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
												<xsl:for-each select="n1:BirthPlace">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="n1:Country">
														<xsl:for-each select="n1:CountryName">
															<span style="font-weight:bold; ">
																<xsl:text>, </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="n1:City">
														<xsl:for-each select="n1:CityName">
															<span>
																<xsl:text>, </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="n1:Descr">
														<span>
															<xsl:text>, </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
													</xsl:for-each>
												</xsl:for-each>
												<xsl:for-each select="n1:Sex">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:choose>
														<xsl:when test=". =1">
															<span style="font-weight:bold; ">
																<xsl:text>Мъж</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =2">
															<span style="font-weight:bold; ">
																<xsl:text>Жена</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =0">
															<span style="font-weight:bold; ">
																<xsl:text>Неизвестен</xsl:text>
															</span>
														</xsl:when>
													</xsl:choose>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentityNumber">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:for-each select="n1:EGN">
														<span>
															<xsl:text>ЕГН: </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
														<span>
															<xsl:text>;</xsl:text>
														</span>
													</xsl:for-each>
													<xsl:for-each select="n1:LN">
														<span>
															<xsl:text>ЛН: </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
														<span>
															<xsl:text>;</xsl:text>
														</span>
													</xsl:for-each>
													<xsl:for-each select="n1:LNCh">
														<span>
															<xsl:text>ЛНЧ: </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
														<span>
															<xsl:text>;</xsl:text>
														</span>
													</xsl:for-each>
													<xsl:for-each select="n1:SUID">
														<span>
															<xsl:text>Системено ID: </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
														<span>
															<xsl:text>;</xsl:text>
														</span>
													</xsl:for-each>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:Sex">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>ПОЛ:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test=". =1">
														<span style="font-weight:bold; ">
															<xsl:text>Мъж</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test=". =2">
														<span style="font-weight:bold; ">
															<xsl:text>Жена</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test=". =0">
														<span style="font-weight:bold; ">
															<xsl:text>Неизвестен</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:IdentityNumber">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>ИДЕНТИФИКАТОРИ:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:for-each select="n1:EGN">
													<span>
														<xsl:text>ЕГН: </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>;</xsl:text>
													</span>
												</xsl:for-each>
												<xsl:for-each select="n1:LN">
													<span>
														<xsl:text>ЛН: </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>;</xsl:text>
													</span>
												</xsl:for-each>
												<xsl:for-each select="n1:LNCh">
													<span>
														<xsl:text>ЛНЧ: </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>;</xsl:text>
													</span>
												</xsl:for-each>
												<xsl:for-each select="n1:SUID">
													<span>
														<xsl:text>Системено ID: </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>;</xsl:text>
													</span>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:if test="string-length(  n1:BirthDate  ) + string-length(  n1:BirthPlace  ) &gt;0">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>РОДЕН(А):</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:for-each select="n1:BirthDate">
													<xsl:choose>
														<xsl:when test="n1:DatePrecision =&apos;Y&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="n1:DatePrecision =&apos;YM&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																</span>
																<span>
																	<xsl:text> месец </xsl:text>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> г.</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
												<xsl:for-each select="n1:BirthPlace">
													<xsl:for-each select="n1:Country">
														<xsl:for-each select="n1:CountryName">
															<span style="font-weight:bold; ">
																<xsl:text>, </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="n1:City">
														<xsl:for-each select="n1:CityName">
															<span>
																<xsl:text>, </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:for-each>
													<xsl:for-each select="n1:Descr">
														<span>
															<xsl:text>, </xsl:text>
														</span>
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
													</xsl:for-each>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:if>
							<table style="border-collapse:collapse; " border="0" width="100%">
								<tbody>
									<tr>
										<td align="left" width="200px">
											<span>
												<xsl:text>ГРАЖДАНСТВО:</xsl:text>
											</span>
										</td>
										<td align="left">
											<xsl:for-each select="n1:PersonNationality">
												<div>
													<xsl:for-each select="n1:CountryName">
														<span style="font-weight:bold; ">
															<xsl:apply-templates/>
														</span>
													</xsl:for-each>
													<xsl:for-each select="n1:CountryISOAlpha3">
														<span>
															<xsl:text>(</xsl:text>
														</span>
														<xsl:apply-templates/>
														<span>
															<xsl:text>)</xsl:text>
														</span>
													</xsl:for-each>
												</div>
											</xsl:for-each>
										</td>
									</tr>
								</tbody>
							</table>
							<xsl:for-each select="n1:PersonIdentificationDocument">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>ДОКУМЕНТ:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:for-each select="n1:IdentificationDocumentCategoryReference">
													<xsl:choose>
														<xsl:when test=". =&apos;ID-00-001&apos;">
															<span>
																<xsl:text>Лична карта</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-002&apos;">
															<span>
																<xsl:text>Удостоверение за гражданска регистрация</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-003&apos;">
															<span>
																<xsl:text>Паспорт</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-004&apos;">
															<span>
																<xsl:text>Шофьорска книжка</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-005&apos;">
															<span>
																<xsl:text>Карта за социално осигуряване</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-006&apos;">
															<span>
																<xsl:text>Временна лична карта</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-007&apos;">
															<span>
																<xsl:text>Разрешение за пребиваване</xsl:text>
															</span>
														</xsl:when>
														<xsl:when test=". =&apos;ID-00-999&apos;">
															<span>
																<xsl:text>Друг документ за самоличност</xsl:text>
															</span>
														</xsl:when>
													</xsl:choose>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentificationDocumentType">
													<span>
														<xsl:text>&#160;</xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentificationDocumentNumber">
													<span>
														<xsl:text> №</xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentificationDocumentIssuingAuthority">
													<span>
														<xsl:text>, издаден от </xsl:text>
													</span>
													<xsl:apply-templates/>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentificationDocumentIssuingDate">
													<span>
														<xsl:text>, издаден на: </xsl:text>
													</span>
													<xsl:choose>
														<xsl:when test="n1:DatePrecision =&apos;Y&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="n1:DatePrecision =&apos;YM&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																</span>
																<span>
																	<xsl:text> месец </xsl:text>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> г.</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
												<xsl:for-each select="n1:IdentificationDocumentValidUntil">
													<span>
														<xsl:text>, валиден до </xsl:text>
													</span>
													<xsl:choose>
														<xsl:when test="n1:DatePrecision =&apos;Y&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:when test="n1:DatePrecision =&apos;YM&apos;">
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																</span>
																<span>
																	<xsl:text> месец </xsl:text>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> година</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<xsl:for-each select="n1:Date">
																<span style="font-weight:bold; ">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</span>
																<span>
																	<xsl:text> г.</xsl:text>
																</span>
															</xsl:for-each>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:MotherNames">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>МАЙКА:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test="string-length(n1:FullName )=0">
														<xsl:for-each select="n1:FirstName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:SurName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:FamilyName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="n1:FullName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:FatherNames">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>БАЩА:</xsl:text>
												</span>
											</td>
											<td align="left">
												<xsl:choose>
													<xsl:when test="string-length(n1:FullName )=0">
														<xsl:for-each select="n1:FirstName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:SurName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="n1:FamilyName">
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="n1:FullName">
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
							<xsl:for-each select="n1:AFISNumber">
								<table style="border-collapse:collapse; " border="0" width="100%">
									<tbody>
										<tr>
											<td align="left" width="200px">
												<span>
													<xsl:text>АФИС НОМЕР:</xsl:text>
												</span>
											</td>
											<td align="left">
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</td>
										</tr>
									</tbody>
								</table>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="n1:Conviction">
							<h3>
								<span>
									<xsl:text>Данни за осъждането</xsl:text>
								</span>
							</h3>
							<xsl:for-each select="n1:CriminalCase">
								<xsl:for-each select="n1:CaseNumber">
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:CaseYear">
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:CaseType">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<xsl:choose>
										<xsl:when test=". =&apos;sign_and&apos;">
											<span style="font-weight:bold; ">
												<xsl:text>АНД</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;sign_naxd&apos;">
											<span style="font-weight:bold; ">
												<xsl:text>НАХД</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;sign_null&apos;"/>
										<xsl:when test=".=&apos;sign_noxd&apos;">
											<span style="font-weight:bold; ">
												<xsl:text>НОХД</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;sign_ncd&apos;">
											<span style="font-weight:bold; ">
												<xsl:text>НЧД</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;sign_ncxd&apos;">
											<span style="font-weight:bold; ">
												<xsl:text>НЧХД</xsl:text>
											</span>
										</xsl:when>
									</xsl:choose>
								</xsl:for-each>
								<xsl:for-each select="n1:CaseAuthority">
									<xsl:for-each select="n1:DecidingAuthorityName">
										<span>
											<xsl:text> на </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="n1:Decision">
								<xsl:for-each select="n1:DecisionType">
									<span>
										<xsl:text>,&#160; </xsl:text>
									</span>
									<xsl:choose>
										<xsl:when test=".=&apos;dkp_sporazumenie&apos;">
											<span>
												<xsl:text>споразумение</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=". =&apos;dkp_opredelenie&apos;">
											<span>
												<xsl:text>определение</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;dkp_prisada&apos;">
											<span>
												<xsl:text>присъда</xsl:text>
											</span>
										</xsl:when>
										<xsl:when test=".=&apos;dkp_reshenie&apos;">
											<span>
												<xsl:text>решение</xsl:text>
											</span>
										</xsl:when>
									</xsl:choose>
								</xsl:for-each>
								<xsl:for-each select="n1:FileNumber">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:DecisionDate">
									<span>
										<xsl:text> / </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:DecidingAuthority">
									<xsl:for-each select="n1:DecidingAuthorityName">
										<span>
											<xsl:text> на </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:apply-templates/>
										</span>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="n1:DecisionFinalDate">
									<span style="text-align:left; ">
										<xsl:text>, в сила от </xsl:text>
									</span>
									<span style="font-weight:bold; ">
										<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
										<xsl:text>.</xsl:text>
										<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
									</span>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="n1:ConvictionRemarks">
								<div>
									<span style="font-weight:bold; ">
										<xsl:apply-templates/>
									</span>
								</div>
							</xsl:for-each>
							<ul start="0">
								<xsl:for-each select="n1:ConvictionOffence">
									<li>
										<span>
											<xsl:text>Престъпление: </xsl:text>
										</span>
										<xsl:for-each select="n1:OffenceId">
											<span>
												<xsl:text>№ </xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:apply-templates/>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:NationalCategoryTitle">
											<span style="font-weight:bold; ">
												<xsl:apply-templates/>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:OffenceCommonCategoryReference">
											<xsl:for-each select="n1:OffenceName">
												<span>
													<xsl:text>, </xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="n1:Remarks">
											<div>
												<span>
													<xsl:text>Описание на деянието: </xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</div>
										</xsl:for-each>
										<xsl:for-each select="n1:OffenceApplicableLegalProvisions">
											<div>
												<span>
													<xsl:text>Приложими законови разпоредби: </xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</div>
										</xsl:for-each>
										<xsl:for-each select="n1:OffencePlace">
											<span>
												<xsl:text>Извършено на място: </xsl:text>
											</span>
											<xsl:for-each select="n1:Descr">
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
												<span>
													<xsl:text>; </xsl:text>
												</span>
											</xsl:for-each>
											<xsl:for-each select="n1:City">
												<xsl:for-each select="n1:CityName">
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>; </xsl:text>
													</span>
												</xsl:for-each>
											</xsl:for-each>
											<xsl:for-each select="n1:Country">
												<xsl:for-each select="n1:CountryName">
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
													<span>
														<xsl:text>; </xsl:text>
													</span>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
										<span style="text-align:left; ">
											<xsl:text> извършено </xsl:text>
										</span>
										<xsl:for-each select="n1:OffenceStartDate">
											<span>
												<xsl:text>на </xsl:text>
											</span>
											<xsl:for-each select="n1:Date">
												<span style="font-weight:bold; ">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
												<span>
													<xsl:text> г.</xsl:text>
												</span>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="n1:OffenceEndDate">
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<span style="text-align:left; ">
												<xsl:text>до</xsl:text>
											</span>
											<span>
												<xsl:text>&#160;</xsl:text>
											</span>
											<xsl:for-each select="n1:Date">
												<span style="font-weight:bold; ">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
												<span>
													<xsl:text> г.</xsl:text>
												</span>
											</xsl:for-each>
										</xsl:for-each>
										<span>
											<xsl:text> - </xsl:text>
										</span>
										<span style="font-weight:bold; ">
											<xsl:text>УМИШЛЕНО</xsl:text>
										</span>
										<xsl:for-each select="n1:FormOfGuilt">
											<span>
												<xsl:text> - </xsl:text>
											</span>
											<xsl:choose>
												<xsl:when test=". =&apos;intentionally&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>УМИШЛЕНО</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;recklessly&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>НЕПРЕДПАЗЛИВО</xsl:text>
													</span>
												</xsl:when>
											</xsl:choose>
										</xsl:for-each>
										<br/>
									</li>
								</xsl:for-each>
							</ul>
							<xsl:for-each select="n1:ConvictionSanction">
								<ul type="square">
									<li>
										<div>
											<span>
												<xsl:text>Наказание: </xsl:text>
											</span>
											<xsl:for-each select="n1:SanctionId">
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
											</xsl:for-each>
											<xsl:for-each select="n1:NationalCategoryTitle">
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</xsl:for-each>
											<xsl:for-each select="n1:SanctionCommonCategoryReference">
												<xsl:for-each select="n1:SanctionText">
													<span>
														<xsl:text>, от категория: </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
												</xsl:for-each>
											</xsl:for-each>
											<xsl:choose>
												<xsl:when test="n1:NationalCategoryCode  =&apos;nkz_globa&apos;">
													<xsl:for-each select="n1:Fine">
														<xsl:for-each select="n1:SanctionAmountOfIndividualFine">
															<span>
																<xsl:text>, </xsl:text>
															</span>
															<span style="text-align:left; ">
																<xsl:text>в размер на </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:apply-templates/>
															</span>
															<span>
																<xsl:text> лв.</xsl:text>
															</span>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="n1:NationalCategoryCode =&apos;nkz_probacia&apos;">
													<xsl:for-each select="n1:Probation">
														<ul type="circle">
															<li>
																<div>
																	<xsl:for-each select="n1:ProbationCategoryTitle">
																		<span style="font-weight:bold; ">
																			<xsl:apply-templates/>
																		</span>
																	</xsl:for-each>
																	<xsl:for-each select="n1:ProbationValue">
																		<span>
																			<xsl:text> - </xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:apply-templates/>
																		</span>
																	</xsl:for-each>
																	<xsl:for-each select="n1:ProbationMeasureTitle">
																		<span>
																			<xsl:text>&#160;</xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:apply-templates/>
																		</span>
																	</xsl:for-each>
																	<xsl:for-each select="n1:SanctionSentencedPeriod">
																		<span>
																			<xsl:text>&#160;</xsl:text>
																		</span>
																		<span style="text-align:left; ">
																			<xsl:text>за срок от</xsl:text>
																		</span>
																		<span>
																			<xsl:text>&#160; </xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:variable name="sDurationYear">
																				<xsl:call-template name="DurationToYear">
																					<xsl:with-param name="sDuration" select="string(string(.))"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="format-number(number($sDurationYear), '0', 'format1')"/>
																		</span>
																		<span>
																			<xsl:text> г. </xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:variable name="sDurationMonth">
																				<xsl:call-template name="DurationToMonth">
																					<xsl:with-param name="sDuration" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="format-number(number($sDurationMonth), '0', 'format1')"/>
																		</span>
																		<span>
																			<xsl:text> м. </xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:variable name="sDurationDay">
																				<xsl:call-template name="DurationToDay">
																					<xsl:with-param name="sDuration" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="format-number(number($sDurationDay), '0', 'format1')"/>
																		</span>
																		<span>
																			<xsl:text> д. </xsl:text>
																		</span>
																		<span style="font-weight:bold; ">
																			<xsl:variable name="sDurationHour">
																				<xsl:call-template name="DurationToHour">
																					<xsl:with-param name="sDuration" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="format-number(number($sDurationHour), '0', 'format1')"/>
																		</span>
																		<span>
																			<xsl:text> ч.</xsl:text>
																		</span>
																	</xsl:for-each>
																</div>
															</li>
														</ul>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="n1:NationalCategoryCode = &apos;nkz_lishavane_ot_svoboda&apos;">
													<xsl:for-each select="n1:Prison">
														<div>
															<xsl:for-each select="n1:SanctionSentencedPeriod">
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
																<span style="text-align:left; ">
																	<xsl:text>за срок от</xsl:text>
																</span>
																<span>
																	<xsl:text>&#160; </xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:variable name="sDurationYear">
																		<xsl:call-template name="DurationToYear">
																			<xsl:with-param name="sDuration" select="string(string(.))"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:value-of select="format-number(number($sDurationYear), '0', 'format1')"/>
																</span>
																<span>
																	<xsl:text> г. </xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:variable name="sDurationMonth">
																		<xsl:call-template name="DurationToMonth">
																			<xsl:with-param name="sDuration" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:value-of select="format-number(number($sDurationMonth), '0', 'format1')"/>
																</span>
																<span>
																	<xsl:text> м. </xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:variable name="sDurationDay">
																		<xsl:call-template name="DurationToDay">
																			<xsl:with-param name="sDuration" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:value-of select="format-number(number($sDurationDay), '0', 'format1')"/>
																</span>
																<span>
																	<xsl:text> д. </xsl:text>
																</span>
																<span style="font-weight:bold; ">
																	<xsl:variable name="sDurationHour">
																		<xsl:call-template name="DurationToHour">
																			<xsl:with-param name="sDuration" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:value-of select="format-number(number($sDurationHour), '0', 'format1')"/>
																</span>
																<span>
																	<xsl:text> ч.</xsl:text>
																</span>
															</xsl:for-each>
															<xsl:for-each select="n1:SanctionSuspension">
																<div>
																	<span style="text-align:left; ">
																		<xsl:text>Освобождаването от изтърпяване на наказанието и неналагането на наказание съгласно НК, както и условното осъждане по чл. 66 ал.1 или чл.69, ал1 НК за срок от </xsl:text>
																	</span>
																	<span>
																		<xsl:text>&#160;</xsl:text>
																	</span>
																	<span style="text-align:left; ">
																		<xsl:text>за срок от</xsl:text>
																	</span>
																	<span>
																		<xsl:text>&#160; </xsl:text>
																	</span>
																	<span style="font-weight:bold; ">
																		<xsl:variable name="sDurationYear">
																			<xsl:call-template name="DurationToYear">
																				<xsl:with-param name="sDuration" select="string(string(.))"/>
																			</xsl:call-template>
																		</xsl:variable>
																		<xsl:value-of select="format-number(number($sDurationYear), '0', 'format1')"/>
																	</span>
																	<span>
																		<xsl:text> г. </xsl:text>
																	</span>
																	<span style="font-weight:bold; ">
																		<xsl:variable name="sDurationMonth">
																			<xsl:call-template name="DurationToMonth">
																				<xsl:with-param name="sDuration" select="string(.)"/>
																			</xsl:call-template>
																		</xsl:variable>
																		<xsl:value-of select="format-number(number($sDurationMonth), '0', 'format1')"/>
																	</span>
																	<span>
																		<xsl:text> м. </xsl:text>
																	</span>
																	<span style="font-weight:bold; ">
																		<xsl:variable name="sDurationDay">
																			<xsl:call-template name="DurationToDay">
																				<xsl:with-param name="sDuration" select="string(.)"/>
																			</xsl:call-template>
																		</xsl:variable>
																		<xsl:value-of select="format-number(number($sDurationDay), '0', 'format1')"/>
																	</span>
																	<span>
																		<xsl:text> д.</xsl:text>
																	</span>
																</div>
															</xsl:for-each>
															<xsl:for-each select="n1:DetentionDescription">
																<span style="font-weight:bold; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</div>
													</xsl:for-each>
												</xsl:when>
												<xsl:otherwise>
													<xsl:for-each select="n1:Other">
														<xsl:for-each select="n1:SanctionSentencedPeriodLength">
															<span style="text-align:left; ">
																<xsl:text>за срок от</xsl:text>
															</span>
															<span>
																<xsl:text>&#160; </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:variable name="sDurationYear">
																	<xsl:call-template name="DurationToYear">
																		<xsl:with-param name="sDuration" select="string(string(.))"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:value-of select="format-number(number($sDurationYear), '0', 'format1')"/>
															</span>
															<span>
																<xsl:text> г. </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:variable name="sDurationMonth">
																	<xsl:call-template name="DurationToMonth">
																		<xsl:with-param name="sDuration" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:value-of select="format-number(number($sDurationMonth), '0', 'format1')"/>
															</span>
															<span>
																<xsl:text> м. </xsl:text>
															</span>
															<span style="font-weight:bold; ">
																<xsl:variable name="sDurationDay">
																	<xsl:call-template name="DurationToDay">
																		<xsl:with-param name="sDuration" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:value-of select="format-number(number($sDurationDay), '0', 'format1')"/>
															</span>
															<span>
																<xsl:text> д. </xsl:text>
															</span>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:otherwise>
											</xsl:choose>
											<xsl:for-each select="n1:Remarks">
												<div>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
												</div>
											</xsl:for-each>
										</div>
									</li>
								</ul>
							</xsl:for-each>
							<xsl:if test="n1:ServingPrevSuspendedSentence = &apos;true&apos;">
								<xsl:for-each select="n1:ServingPrevSuspendedSentence">
									<span style="font-weight:bold; ">
										<xsl:text>Постановено изтърпяване на предходна условна присъда</xsl:text>
									</span>
								</xsl:for-each>
								<xsl:for-each select="n1:ServingPrevSuspendedSentenceActNumber">
									<span>
										<xsl:text>: </xsl:text>
									</span>
									<xsl:apply-templates/>
								</xsl:for-each>
							</xsl:if>
							<xsl:for-each select="n1:EcrisConvictionId">
								<span>
									<xsl:text>Идентификатор на осъждане в ECRIS: </xsl:text>
								</span>
								<span style="font-weight:bold; ">
									<xsl:apply-templates/>
								</span>
							</xsl:for-each>
							<xsl:if test="count(  n1:ConvictionDecisions )&gt; 0">
								<h3>
									<span>
										<xsl:text>Допълнителни сведения</xsl:text>
									</span>
								</h3>
							</xsl:if>
							<ul>
								<li>
									<xsl:for-each select="n1:ConvictionDecisions">
										<xsl:for-each select="n1:DecisionChangeTypeReference">
											<xsl:choose>
												<xsl:when test=". =&apos;DCH-00-R&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Реабилитация</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-N&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Край на изтърпяването на наказанието</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-E&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Замяна на наказание/мярка</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-I&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Последващо определяне на едно общо наказание</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-Q&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Допуснато условно предсрочно освобождаване</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-S&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Отмяна на условно предсрочно освобождаване</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-Y&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Постановен съдебен акт по чл. 425 НПК</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-88-B&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Отменена кумулация</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-88-A&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Погасено по давност по наказание – изтича срока чл. 82 от НК</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-P&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Амнистия</xsl:text>
													</span>
												</xsl:when>
												<xsl:when test=". =&apos;DCH-00-O&apos;">
													<span style="font-weight:bold; ">
														<xsl:text>Помилване</xsl:text>
													</span>
												</xsl:when>
											</xsl:choose>
										</xsl:for-each>
										<xsl:for-each select="n1:ValidFrom">
											<span>
												<xsl:text>, валидно от </xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
											</span>
											<span>
												<xsl:text> г.</xsl:text>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:ReceiveDate">
											<span>
												<xsl:text>, дата на получаване на сведението: </xsl:text>
											</span>
											<span style="font-weight:bold; ">
												<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
												<xsl:text>.</xsl:text>
												<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
											</span>
											<span>
												<xsl:text> г.</xsl:text>
											</span>
										</xsl:for-each>
										<xsl:for-each select="n1:Decision">
											<xsl:for-each select="n1:DecisionType">
												<span>
													<xsl:text>с </xsl:text>
												</span>
												<xsl:choose>
													<xsl:when test=".=&apos;dkp_sporazumenie&apos;">
														<span style="font-weight:bold; ">
															<xsl:text>споразумение</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test=". =&apos;dkp_opredelenie&apos;">
														<span style="font-weight:bold; ">
															<xsl:text>определение</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test=".=&apos;dkp_prisada&apos;">
														<span style="font-weight:bold; ">
															<xsl:text>присъда</xsl:text>
														</span>
													</xsl:when>
													<xsl:when test=".=&apos;dkp_reshenie&apos;">
														<span style="font-weight:bold; ">
															<xsl:text>решение</xsl:text>
														</span>
													</xsl:when>
												</xsl:choose>
											</xsl:for-each>
											<xsl:for-each select="n1:FileNumber">
												<span>
													<xsl:text>&#160;</xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:apply-templates/>
												</span>
											</xsl:for-each>
											<xsl:for-each select="n1:DecisionDate">
												<span>
													<xsl:text> / </xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
												<span>
													<xsl:text> г.</xsl:text>
												</span>
											</xsl:for-each>
											<xsl:for-each select="n1:DecidingAuthority">
												<xsl:for-each select="n1:DecidingAuthorityName">
													<span>
														<xsl:text> на </xsl:text>
													</span>
													<span style="font-weight:bold; ">
														<xsl:apply-templates/>
													</span>
												</xsl:for-each>
											</xsl:for-each>
											<xsl:for-each select="n1:DecisionFinalDate">
												<span style="text-align:left; ">
													<xsl:text>, в сила от </xsl:text>
												</span>
												<span style="font-weight:bold; ">
													<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
													<xsl:text>.</xsl:text>
													<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
												</span>
												<span>
													<xsl:text> г.</xsl:text>
												</span>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:for-each select="n1:DecisionRemarks">
											<div>
												<xsl:apply-templates/>
											</div>
										</xsl:for-each>
									</xsl:for-each>
								</li>
							</ul>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="DurationToYear">
		<xsl:param name="sDuration"/>
		<xsl:variable name="sDate">
			<xsl:choose>
				<xsl:when test="contains(string($sDuration), 'T')">
					<xsl:value-of select="substring-before(string($sDuration), 'T')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="string($sDuration)"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="sYear" select="substring-before(substring-after($sDate, 'P'), 'Y')"/>
		<xsl:choose>
			<xsl:when test="string-length($sYear)=0">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring-before(string($sDuration), 'P'), $sYear)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DurationToMonth">
		<xsl:param name="sDuration"/>
		<xsl:variable name="sDate">
			<xsl:choose>
				<xsl:when test="contains(string($sDuration), 'T')">
					<xsl:value-of select="substring-before(string($sDuration), 'T')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="string($sDuration)"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="sMonth">
			<xsl:choose>
				<xsl:when test="contains($sDate, 'Y')">
					<xsl:value-of select="substring-before(substring-after($sDate, 'Y'), 'M')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="substring-before(substring-after($sDate, 'P'), 'M')"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="string-length($sMonth)=0">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring-before(string($sDuration), 'P'), $sMonth)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DurationToDay">
		<xsl:param name="sDuration"/>
		<xsl:variable name="sDate">
			<xsl:choose>
				<xsl:when test="contains(string($sDuration), 'T')">
					<xsl:value-of select="substring-before(string($sDuration), 'T')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="string($sDuration)"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="sDay">
			<xsl:choose>
				<xsl:when test="contains($sDate, 'M')">
					<xsl:value-of select="substring-before(substring-after($sDate, 'M'), 'D')"/>
				</xsl:when>
				<xsl:when test="contains($sDate, 'Y')">
					<xsl:value-of select="substring-before(substring-after($sDate, 'Y'), 'D')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="substring-before(substring-after($sDate, 'P'), 'D')"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="string-length($sDay)=0">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring-before(string($sDuration), 'P'), $sDay)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DurationToHour">
		<xsl:param name="sDuration"/>
		<xsl:variable name="sTime" select="substring-after(string($sDuration), 'T')"/>
		<xsl:variable name="sHour" select="substring-before($sTime, 'H')"/>
		<xsl:choose>
			<xsl:when test="string-length($sHour)=0">
				<xsl:value-of select="'0'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring-before(string($sDuration), 'P'), $sHour)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
